/// Creates a selector by using `_outer-selector` and `_inner-selector` of a prop-map
/// @param {String} $outer-selectors - Outer selector
/// @param {String} $prefix - Prefix: Component name
/// @param {String} $bp-key - Breakpoint: xs-up, sm-down etc.
/// @param {String} $type - Type fo the utility class: d, mx, txt-align etc.
/// @param {String} $inner-selectors - Inner selector
/// @return {String} - A selector
@function get-selectors($outer-selectors: null, $bp-key, $prefix, $type: null, $inner-selectors: null, $unusable-bp) {
  $selectors: ();

  @if $type != null {
    $prefix: #{$prefix}\=#{$type};
  }

  @if map-get($unusable-bp, $bp-key) == null {
    $prefix: #{$bp-key}\:#{$prefix};
  }

  @if $type == null {
    $prefix: ('[class^="#{$prefix}"]', '[class*=" #{$prefix}"]');
  }
  @else {
    $prefix: " ." + #{$prefix};
  }

  @each $middle in $prefix {
    @each $outer in $outer-selectors {
      @each $inner in $inner-selectors {
        $selectors: append($selectors, "#{$outer} #{$middle}#{$inner}");
      }
    }
  }

  @return join($selectors, (), $separator: comma, $bracketed: false);
}
